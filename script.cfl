<app>

  <choice id="launch">
    <expecting>What can you do</expecting>
    <say>I can help you track your meals for the week.</say>
    <decision>
      <ask>Would you like to learn more or hear what you can say?</ask>
      <choice>
        <expecting>Yes {Please|}</expecting>
        <expecting>{Learn|} More</expecting>
        <jump target="#help">
      </choice>
      <choice>
        <expecting>No {thanks|}</expecting>
        <say>Sounds good</say>
      </choice>
    </decision>
  </choice>

  <choice id="help">
    <expecting>Help me</expecting>
    <expecting>What {to|can I} say</expecting>
    <say>Ever wanted to easily track of what you are making this week?</say>
    <say keepConversationRunning>Try adding a meal or seeing what is being made for dinner.</say>
  </choice>

  <choice id="fallback">
    <say>Sorry, I am not what to do with that.</say>
    <jump target="#launch">
  </choice>

  <choice id="stop">
    <say>Goodbye.</say>
  </choice>

  <choice id="cancel">
    <say>Goodbye.</say>
  </choice>

  <choice id="openEnded">
    <expecting>What are we making</expecting>
    <check value="app.anyMealsPlannedOpenEnded(response)">
      <case value="planned">
        <say>We have [[mealName]] planned for [[mealType]] [[mealDayPretty]]</say>
        <decision>
          <ask>Would you like to delay it</ask>
          <choice>
            <expecting>{Delay|Change} it to [[newMealDay]]</expecting>
            <resolve value="app.updateDate(response)">
              <say>Updated [[mealName]] to now be made on [[mealDay]]</say>
            </resolve>
          </choice>
          <choice>
            <expecting>Change it to [[newMealType]]</expecting>
            <resolve value="app.updateMealType(response)">
              <say>Updated [[mealName]] to now be made a [[mealType]]</say>
            </resolve>
          </choice>
          <choice>
            <expecting>No {thanks|}</expecting>
            <say>Sounds good</say>
          </choice>
        </decision>
      </case>
      <case value="nonePlannedThisWeek">
        <say>Sorry, I do not have anything planned this week</say>
      </case>
      <default>
        <say>Sorry, I am not sure</say>
      </default>
    </check>
  </choice>

  <choice id="queryGeneric">
    <expecting>What are we making [[mealDay]] for [[mealType]]</expecting>
    <check value="app.anyMealsPlannedGeneric(response)">
      <case value="planned">
        <sayOne>
          <say>We have [[mealName]] planned for [[mealDay]]</say>
          <say>For [[mealDay]] we have [[mealName]] planned</say>
        </sayOne>
      </case>
      <case value="plannedButDifferentMeal">
        <say>Sorry, I do not have anything planned for [[mealType]] but do have plans for [[availMealType]]</say>
      </case>
      <case value="plannedButOtherTimeInWeek">
        <say>Sorry, I do not have anything planned for [[mealDay]] but do have plans for [[availMealDayPretty]]</say>
      </case>
      <case value="nonePlannedThisWeek">
        <say>Sorry, I do not have anything planned this week</say>
      </case>
      <default>
        <say>Sorry, I am not sure</say>
      </default>
    </check>
  </choice>

  <choice id="queryDinnerTonight">
    <expecting>What are we making today for dinner</expecting>
    <check value="app.anyMealsPlannedTonight(response)">
      <case value="planned">
        <sayOne>
          <say>We have [[mealName]] planned for tonight</say>
          <say>Tonight we have [[mealName]] planned</say>
        </sayOne>
      </case>
      <case value="plannedOnlyOtherMeals">
        <say>Sorry, I do not have anything planned for tonight</say>
      </case>
      <case value="plannedOnlyLaterThisWeek">
        <say>Sorry, I only have plans for later this week</say>
      </case>
      <case value="nonePlanned">
        <say>Sorry, I do not have anything planned yet</say>
      </case>
      <default>
        <say>Sorry, I am not sure</say>
      </default>
    </check>
  </choice>

  <dialog id="addMealPlan" elicit="dialog.nextReqdParam()">
    <expecting>Lets plan a meal</expecting>
    <expecting>Lets plan a [[mealType]]</expecting>
    <expecting>Lets plan a meal for [[mealDay]]</expecting>
    <expecting>Lets plan to make [[mealName]]</expecting>
    <!-- <expecting>Lets plan a meal to have [[mealName]] for [[mealType]] on [[mealDay]]</expecting> -->

    <item name="mealDay" required>
      <ask>What day would you like to make it</ask>
      <expecting>I would like to make it on [[mealDay]]</expecting>
      <expecting>Make it on [[mealDay]]</expecting>
    </item>
    <item name="mealType" required>
      <ask>Would it be breakfast, lunch, or dinner</ask>
      <expecting>It would be [[mealType]]</expecting>
    </item>
    <item name="mealName" required>
      <ask>What would you like the meal to be called</ask>
      <expecting>I would like to call it [[mealName]]</expecting>
    </item>
    <resolve value="app.planMeal(response)">
      <sayOne>
        <say>Great.</say>
        <say>Got it.</say>
        <say>Awesome.</say>
      </sayOne>
      <sayOne>
        <say>[[mealName]] for [[mealType]] [[mealDayPretty]]</say>
        <say>We will be making [[mealName]] for [[mealType]] [[mealDayPretty]]</say>
        <say>[[mealDayPretty]] We will be making [[mealName]] for [[mealType]]</say>
      </sayOne>
    </resolve>
  </dialog>

</app>
